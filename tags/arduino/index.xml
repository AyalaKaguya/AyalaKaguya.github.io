<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Arduino on Paper的小站</title>
    <link>https://www.papernote.cn/tags/arduino/</link>
    <description>Recent content in Arduino on Paper的小站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh_CN</language>
    <copyright>© 2017-2021 **[Paper的小站](https://www.papernote.cn)** | [CC BY-NC 4.0](https://creativecommons.org/licenses/by-nc/4.0/) | [苏ICP备20043492号](https://beian.miit.gov.cn/) |</copyright>
    <lastBuildDate>Fri, 22 Jul 2022 23:09:17 +0800</lastBuildDate><atom:link href="https://www.papernote.cn/tags/arduino/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>FreeRTOS学习笔记 - API规范记录</title>
      <link>https://www.papernote.cn/posts/2022-07-22-freertos%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-api%E8%A7%84%E8%8C%83%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Fri, 22 Jul 2022 23:09:17 +0800</pubDate>
      
      <guid>https://www.papernote.cn/posts/2022-07-22-freertos%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-api%E8%A7%84%E8%8C%83%E8%AE%B0%E5%BD%95/</guid>
      <description>❗ 注意
这篇文章处于早期编写时期。 文章内容较长且多为字典用途，请结合上面的目录使用。
Ayala看b站UP主孤独的二进制的FreeRTOS教学视频有感，打算对视频内容进行一些总结和归纳，方便以后的使用。
为什么要使用RTOS （Real-Time Operating System,RTOS）即实时操作系统，通常应用于嵌入式等对实时性要求较高的产品中，它会按照排序运行、管理系统资源，并为开发应用程序提供一致的基础。 实时操作系统与一般的操作系统相比，最大的特色就是“实时性”，如果有一个任务需要执行，实时操作系统会马上（在较短时间内）执行该任务，不会有较长的延时。这种特性保证了各个任务的及时执行。
FreeRTOS与Arduino框架的区别 在ESP32平台上，Arduino是运行在RTOS上的一个任务（Task），分为设置代码setup()和基础循环loop()，其在RTOS中的表示大概是这样的：
1 2 3 4 5 6 7 8 9 10 11 void task_arduino(void* ptParam) { setup() for (;;) { loop() } } void app_main() { xTaskCreatePinnedToCore(task_arduino,&amp;#34;arduino&amp;#34;,1024*128,NULL,1,NULL,1) // 以上一条代码不需要管 } 而一个标准的Arduino的程序看起来是这样的：
1 2 3 4 5 6 void setup() { ... } void loop() { ... } 使用Arduino-ESP32这个库会将上述代码代入前一个代码，所以即便你可能用的是ArduinoIDE，但是实际上仍会被翻译成ESP-IDF项目，所以你可以在你的Arduino-ESP32项目中使用FreeRTOS。
FreeRTOS有什么API需要注意 💬 引用：
b站 孤独的二进制：有部分的介绍来自于此
ESP32文档和FreeRTOS的文档：函数原型、参数、返回值等的描述
可能还有一些没标注到的，请在评论区联系我。
创建、删除任务，任务绑定核心 xTaskCreate 创建任务</description>
    </item>
    
  </channel>
</rss>
